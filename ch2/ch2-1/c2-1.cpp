/************************************************************************************/
/*             HW#1 : 실습 2-1                                                      */
/*  작성자 : 정선미                    날짜 : 2023년 3월 20일                       */
/*                                                                                  */
/* 문제 정의 : 배열의 실행 결과를 통해 배열의 이름 및 주소, 배열 포인터,			*/
/*			   이중 포인터 등의 쓰임에 대해 분석해본다.								*/
/************************************************************************************/
#include<iostream>
using namespace std;

int main() {

	int M[3][3] = { {1, 2, 3}, {4, 5, 6}, {7, 8 ,9} };
	int(*ptr)[3];  //일차원 배열의 크기 값 지정(알려줌)
	int* p;
	int** pt;

	ptr = M;
	cout << ptr <<" "<< M << "\n"; // M[0]의  주소 값 출력
	cout << ptr + 1 <<" " << M + 1 << "\n";   // 주소3 x 4byte만큼 늘어남 
	cout << *(ptr + 1) << " " << ptr[1] << " " << *(M + 1) << " " << M[1] << "\n";  //M[1]의 주소 값 출력
	cout << **(ptr + 1) << " " << **(M + 1) << " " << *M[1] << " " << M[1][0] << "\n\n"; //이중 포인터이기 때문에 원소 값 '4' 출력


	p = M[0];
	cout << p << " " << M[0] << " " << *M << "\n";	// M[0]의  주소 값 출력
	cout << p + 1 << " " << M[0] + 1 << " " << *M + 1 << "\n"; //M[0][1]의 주소값 출력
	cout << *(p + 1) << " " << *(M[0] + 1) << " " << *(*M + 1) << "\n\n";  //이중 포인터이기 때문에 원소 값 '2' 출력

	pt = &p;
	cout << *pt << " " << p << "\n"; // M[0]의  주소 값 출력
	cout << **pt << " " << *p << "\n"; //이중 포인터이기 때문에 원소 값 '1'출력


}